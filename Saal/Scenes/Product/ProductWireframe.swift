//
//  AddOrUpdateProductWireframe.swift
//  Saal
//
//  Created by Mozhgan
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

extension ProductViewController {
    enum Desination {
        case addRelatedProduct(suggestibleProducts : [Product],delegate : SuggestibleProductsWireframeMoudleDelegate)
    }
}

final class ProductWireframe: BaseWireframe<ProductViewController> {

    // MARK: - Module setup -

    init(product : Product? = nil,
         storageContext : StorageContext,
         moudleDelegate :ProductMoudleDelegate) {
        let moduleViewController = ProductViewController()
        super.init(viewController: moduleViewController)

        let interactor = ProductInteractor(storageContext: storageContext,
                                                      product: product)
        let presenter = ProductPresenter(interactor: interactor, wireframe: self, moudleDelegate: moudleDelegate)
        moduleViewController.presenter = presenter
    }

}

// MARK: - Extensions -

extension ProductWireframe: ProductWireframeInterface {
    func routeTo(desination : ProductViewController.Desination) {
        switch desination {
        case .addRelatedProduct(suggestibleProducts: let suggestibleProducts, delegate: let delegate):
            let suggestibleProductsWireframe = SuggestibleProductsWireframe.init(products: suggestibleProducts,
                                                                                 delegate: delegate)
            self.viewController.present(UINavigationController(rootViewController: suggestibleProductsWireframe.viewController),
                                        animated: true,
                                        completion: nil)
        }
    }
}
